openapi: 3.0.1
info:
  title: GET-P API
  description: GET-P API 명세서
  version: 0.1.0
servers:
- url: https://api.principes.xyz
  description: 개발 서버
- url: http://localhost:57020
  description: 로컬 서버
tags: [
  ]
paths:
  /get-p/v2/people:
    get:
      tags:
      - 피플
      summary: 피플 목록 조회
      description: 사용자는 피플 목록을 조회할 수 있다.
      operationId: people/get-people-list
      parameters:
      - name: page
        in: query
        description: 페이지 번호
        required: false
        schema:
          type: string
      - name: size
        in: query
        description: 페이지 크기
        required: false
        schema:
          type: string
      - name: sort
        in: query
        description: 정렬 조건
        required: false
        schema:
          type: string
      - name: liked
        in: query
        description: 좋아요한 피플만 보기 여부. 필터 설정 시 true로 설정
        required: false
        schema:
          type: string
      - name: keyword
        in: query
        description: 피플 닉네임으로 검색하기. 닉네임이 해당 키워드로 시작하는 피플을 검색해요.
        required: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: false
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '200':
          description: '200'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/PagedCardPeopleResponse'
              examples:
                people/get-people-list:
                  value: |-
                    {
                      "status" : 200,
                      "data" : {
                        "content" : [ {
                          "peopleId" : 1,
                          "nickname" : "닉네임",
                          "profileImageUri" : "https://storage.principes.xyz/images/1/profile/image.jpg",
                          "completedProjectsCount" : 3,
                          "likesCount" : 5,
                          "profile" : {
                            "introduction" : "안녕하세요, 신찬규입니다.",
                            "activityArea" : "대구광역시 달서구",
                            "hashtags" : [ "#해시태그1", "#해시태그2" ]
                          }
                        } ],
                        "pageInfo" : {
                          "totalPages" : 1,
                          "totalElements" : 1,
                          "size" : 3,
                          "number" : 0,
                          "numberOfElements" : 1,
                          "first" : true,
                          "last" : true,
                          "empty" : false,
                          "sort" : {
                            "property" : "peopleId",
                            "direction" : "DESC"
                          }
                        }
                      }
                    }
  /get-p/v2/projects:
    get:
      tags:
      - 프로젝트
      summary: 프로젝트 목록 조회
      description: 사용자는 프로젝트 목록을 조회할 수 있다.
      operationId: project/get-projects
      parameters:
      - name: page
        in: query
        description: 페이지 번호
        required: false
        schema:
          type: string
      - name: size
        in: query
        description: 페이지 크기
        required: false
        schema:
          type: string
      - name: sort
        in: query
        description: 정렬 조건
        required: false
        schema:
          type: string
      - name: liked
        in: query
        description: 좋아요한 프로젝트만 보기 여부. 필터 설정 시 true로 설정
        required: false
        schema:
          type: string
      - name: commissioned
        in: query
        description: 의뢰한 프로젝트만 보기 여부. 필터 설정 시 true로 설정
        required: false
        schema:
          type: string
      - name: applied
        in: query
        description: 지원한 프로젝트만 보기 여부. 필터 설정 시 true로 설정
        required: false
        schema:
          type: string
      - name: closed
        in: query
        description: 모집 마감된 프로젝트만 보기 여부. 필터 설정 시 true로 설정
        required: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: false
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '200':
          description: '200'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/PagedCardProjectResponse'
              examples:
                project/get-projects:
                  value: |-
                    {
                      "status" : 200,
                      "data" : {
                        "content" : [ {
                          "projectId" : 1,
                          "title" : "프로젝트 제목",
                          "payment" : 1000000,
                          "recruitmentCount" : 1,
                          "applicantsCount" : 5,
                          "estimatedDays" : 10,
                          "applicationDuration" : {
                            "startDate" : "2024-07-01",
                            "endDate" : "2024-07-07"
                          },
                          "hashtags" : [ "#해시태그1", "#해시태그2" ],
                          "description" : "프로젝트 설명",
                          "status" : "APPLICATION_OPENED"
                        }, {
                          "projectId" : 2,
                          "title" : "프로젝트 제목",
                          "payment" : 1000000,
                          "recruitmentCount" : 1,
                          "applicantsCount" : 5,
                          "estimatedDays" : 10,
                          "applicationDuration" : {
                            "startDate" : "2024-07-01",
                            "endDate" : "2024-07-07"
                          },
                          "hashtags" : [ "#해시태그1", "#해시태그2" ],
                          "description" : "프로젝트 설명",
                          "status" : "APPLICATION_OPENED"
                        } ],
                        "pageInfo" : {
                          "totalPages" : 1,
                          "totalElements" : 2,
                          "size" : 10,
                          "number" : 0,
                          "numberOfElements" : 2,
                          "first" : true,
                          "last" : true,
                          "empty" : false,
                          "sort" : {
                            "property" : "projectId",
                            "direction" : "DESC"
                          }
                        }
                      }
                    }
    post:
      tags:
      - 프로젝트 의뢰
      summary: 프로젝트 의뢰
      description: 의뢰자는 프로젝트를 의뢰할 수 있다.
      operationId: project/commission-project
      parameters:
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/CommissionProjectRequest'
            examples:
              project/commission-project:
                value: |-
                  {
                    "title" : "프로젝트 제목",
                    "payment" : 1000000,
                    "recruitmentCount" : 1,
                    "applicationDuration" : {
                      "startDate" : "2024-07-01",
                      "endDate" : "2024-07-31"
                    },
                    "estimatedDuration" : {
                      "startDate" : "2024-08-01",
                      "endDate" : "2024-08-31"
                    },
                    "description" : "프로젝트 설명",
                    "meetingType" : "IN_PERSON",
                    "category" : "BACKEND",
                    "attachmentFiles" : [ "https://example.com/attachment1", "https://example.com/attachment2" ],
                    "hashtags" : [ "#해시태그1", "#해시태그2" ]
                  }
      responses:
        '201':
          description: '201'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/CommissionProjectResponse'
              examples:
                project/commission-project:
                  value: |-
                    {
                      "status" : 201,
                      "data" : {
                        "projectId" : 1
                      }
                    }
  /get-p/v2/applications/{applicationId}:
    get:
      tags:
      - 프로젝트 관리
      summary: 프로젝트 지원서 조회
      description: 의뢰자는 프로젝트 지원자의 지원서를 조회할 수 있다.
      operationId: project/get-application-form
      parameters:
      - name: applicationId
        in: path
        description: 프로젝트 지원 ID
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: false
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '200':
          description: '200'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ProjectApplicationFormResponse'
              examples:
                project/get-application-form:
                  value: |-
                    {
                      "status" : 200,
                      "data" : {
                        "applicationId" : 1,
                        "type" : "TEAM",
                        "project" : {
                          "projectId" : 1,
                          "title" : "프로젝트 제목",
                          "payment" : 1000000,
                          "recruitmentCount" : 1,
                          "applicantsCount" : 5,
                          "applicationDuration" : {
                            "startDate" : "2024-07-01",
                            "endDate" : "2024-07-07"
                          },
                          "estimatedDuration" : {
                            "startDate" : "2024-07-14",
                            "endDate" : "2024-07-21"
                          },
                          "description" : "프로젝트 설명",
                          "meetingType" : "IN_PERSON",
                          "category" : "BACKEND",
                          "status" : "APPLICATION_OPENED",
                          "attachmentFiles" : [ "https://example.com/attachment1", "https://example.com/attachment2" ],
                          "hashtags" : [ "#해시태그1", "#해시태그2" ],
                          "likesCount" : 5,
                          "liked" : true,
                          "client" : {
                            "clientId" : 1,
                            "nickname" : "닉네임",
                            "address" : {
                              "zipcode" : "41566",
                              "street" : "대구광역시 북구 대학로 80",
                              "detail" : "IT대학 융복합관"
                            }
                          }
                        },
                        "nickname" : "닉네임",
                        "techStacks" : [ "Java", "Spring", "JPA" ],
                        "activityArea" : "대구광역시 달서구",
                        "education" : {
                          "school" : "경북대학교",
                          "major" : "컴퓨터공학"
                        },
                        "introduction" : "안녕하세요, 신찬규입니다.",
                        "portfolios" : [ {
                          "description" : "포트폴리오1 내용",
                          "url" : "https://github.com/scv1702/1"
                        }, {
                          "description" : "포트폴리오2 내용",
                          "url" : "https://github.com/scv1702/2"
                        } ],
                        "expectedDuration" : {
                          "startDate" : "2024-07-01",
                          "endDate" : "2024-07-31"
                        },
                        "status" : "COMPLETED",
                        "description" : "지원 내용",
                        "attachmentFiles" : [ "https://example.com/attachment1", "https://example.com/attachment2" ],
                        "teammates" : [ {
                          "peopleId" : 2,
                          "nickname" : "닉네임2",
                          "status" : "APPROVED",
                          "profileImageUrl" : "https://storage.principes.xyz/images/2/profile/image.jpg"
                        }, {
                          "peopleId" : 3,
                          "nickname" : "닉네임3",
                          "status" : "PENDING",
                          "profileImageUrl" : "https://storage.principes.xyz/images/3/profile/image.jpg"
                        }, {
                          "peopleId" : 4,
                          "nickname" : "닉네임4",
                          "status" : "APPROVED",
                          "profileImageUrl" : "https://storage.principes.xyz/images/4/profile/image.jpg"
                        } ]
                      }
                    }
  /get-p/v2/auth/login:
    post:
      tags:
      - 인증
      summary: 로그인
      description: 사용자는 로그인을 할 수 있다.
      operationId: auth/login
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/LoginRequest'
            examples:
              auth/login:
                value: |-
                  {
                    "email" : "test@example.com",
                    "password" : "qwer1234!"
                  }
      responses:
        '201':
          description: '201'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TokenResponse'
              examples:
                auth/login:
                  value: |-
                    {
                      "status" : 201,
                      "data" : {
                        "grantType" : "Bearer",
                        "accessToken" : "${ACCESS_TOKEN}",
                        "refreshToken" : "${REFRESH_TOKEN}"
                      }
                    }
  /get-p/v2/auth/reissue:
    post:
      tags:
      - 인증
      summary: Access Token 재발급
      description: 사용자는 로그인 유지를 할 수 있다.
      operationId: auth/reissue-access-token
      parameters:
      - name: Refresh-Token
        in: header
        description: Bearer ${REFRESH_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${REFRESH_TOKEN}
      responses:
        '201':
          description: '201'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/TokenResponse'
              examples:
                auth/reissue-access-token:
                  value: |-
                    {
                      "status" : 201,
                      "data" : {
                        "grantType" : "Bearer",
                        "accessToken" : "${ACCESS_TOKEN}",
                        "refreshToken" : "${REFRESH_TOKEN}"
                      }
                    }
  /get-p/v2/auth/signup:
    post:
      tags:
      - 인증
      summary: 회원 가입
      description: 사용자는 회원 가입을 할 수 있다.
      operationId: auth/signup
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
            examples:
              auth/signup:
                value: |-
                  {
                    "email" : "test@example.com",
                    "password" : "qwer1234!",
                    "verificationCode" : "1234",
                    "serviceTerms" : [ {
                      "tag" : "tag1",
                      "agreed" : true
                    }, {
                      "tag" : "tag2",
                      "agreed" : false
                    } ],
                    "memberType" : "ROLE_CLIENT"
                  }
      responses:
        '201':
          description: '201'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              examples:
                auth/signup:
                  value: |-
                    {
                      "status" : 201
                    }
  /get-p/v2/client/me:
    get:
      tags:
      - 의뢰자
      summary: 의뢰자 정보 조회
      description: 의뢰자는 자신의 의뢰자 정보를 조회할 수 있다.
      operationId: client/get-my-client
      parameters:
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '200':
          description: '200'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ClientResponse'
              examples:
                client/get-my-client:
                  value: |-
                    {
                      "status" : 200,
                      "data" : {
                        "clientId" : 1,
                        "nickname" : "닉네임",
                        "phoneNumber" : "01012345678",
                        "email" : "test@example.com",
                        "profileImageUri" : "https://storage.principes.xyz/images/1/profile/image.jpg",
                        "address" : {
                          "zipcode" : "41566",
                          "street" : "대구광역시 북구 대학로 80",
                          "detail" : "IT대학 융복합관"
                        },
                        "createdAt" : "2024-10-29T23:55:55.13855",
                        "updatedAt" : "2024-10-29T23:55:55.13855"
                      }
                    }
    put:
      tags:
      - 의뢰자
      summary: 내 의뢰자 정보 수정
      description: 의뢰자는 자신의 의뢰자 정보를 수정할 수 있다.
      operationId: client/edit-my-client
      parameters:
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/EditMyClientRequest'
            examples:
              client/edit-my-client:
                value: |-
                  {
                    "nickname" : "닉네임",
                    "email" : "test@example.com",
                    "phoneNumber" : "01012345678",
                    "address" : {
                      "zipcode" : "41566",
                      "street" : "대구광역시 북구 대학로 80",
                      "detail" : "IT대학 융복합관"
                    }
                  }
      responses:
        '200':
          description: '200'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              examples:
                client/edit-my-client:
                  value: |-
                    {
                      "status" : 200
                    }
    post:
      tags:
      - 의뢰자
      summary: 내 의뢰자 정보 등록
      description: 의뢰자는 의뢰자 정보를 등록할 수 있다.
      operationId: client/register-my-client
      parameters:
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/RegisterMyClientRequest'
            examples:
              client/register-my-client:
                value: |-
                  {
                    "nickname" : "닉네임",
                    "email" : "test@example.com",
                    "phoneNumber" : "01012345678",
                    "address" : {
                      "zipcode" : "41566",
                      "street" : "대구광역시 북구 대학로 80",
                      "detail" : "IT대학 융복합관"
                    }
                  }
      responses:
        '201':
          description: '201'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RegisterMyClientResponse'
              examples:
                client/register-my-client:
                  value: |-
                    {
                      "status" : 201,
                      "data" : {
                        "clientId" : 1
                      }
                    }
  /get-p/v2/member/me:
    get:
      tags:
      - 회원
      summary: 내 회원 정보 조회
      description: 사용자는 자신의 회원 정보를 조회할 수 있다.
      operationId: member/get-my-member
      parameters:
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '200':
          description: '200'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MemberResponse'
              examples:
                member/get-my-member:
                  value: |-
                    {
                      "status" : 200,
                      "data" : {
                        "memberId" : 1,
                        "email" : "test@example.com",
                        "nickname" : "닉네임",
                        "profileImageUri" : "https://storage.principes.xyz/images/1/profile/image.jpg",
                        "memberType" : "ROLE_PEOPLE",
                        "createdAt" : "2024-10-29T23:55:55.30179",
                        "updatedAt" : "2024-10-29T23:55:55.30179"
                      }
                    }
  /get-p/v2/people/me:
    get:
      tags:
      - 피플
      summary: 내 피플 정보 조회
      description: 피플은 자신의 정보를 조회할 수 있다.
      operationId: people/get-my-people
      parameters:
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '200':
          description: '200'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/MyPeopleResponse'
              examples:
                people/get-my-people:
                  value: |-
                    {
                      "status" : 200,
                      "data" : {
                        "peopleId" : 1,
                        "email" : "test@example.com",
                        "nickname" : "닉네임",
                        "phoneNumber" : "01012345678",
                        "profileImageUri" : "https://storage.principes.xyz/images/1/profile/image.jpg",
                        "completedProjectsCount" : 0,
                        "likesCount" : 0,
                        "createdAt" : "2024-10-29T23:55:55.474725",
                        "updatedAt" : "2024-10-29T23:55:55.474729"
                      }
                    }
    put:
      tags:
      - 피플
      summary: 내 피플 정보 수정
      description: 피플은 자신의 정보를 수정할 수 있다.
      operationId: people/edit-my-people
      parameters:
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/EditMyPeopleRequest'
            examples:
              people/edit-my-people:
                value: |-
                  {
                    "nickname" : "닉네임",
                    "email" : "test@example.com",
                    "phoneNumber" : "01012345678"
                  }
      responses:
        '201':
          description: '201'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              examples:
                people/edit-my-people:
                  value: |-
                    {
                      "status" : 201
                    }
    post:
      tags:
      - 피플
      summary: 내 피플 정보 등록
      description: 피플은 자신의 정보를 등록할 수 있다.
      operationId: people/register-my-people
      parameters:
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/RegisterMyPeopleRequest'
            examples:
              people/register-my-people:
                value: |-
                  {
                    "nickname" : "닉네임",
                    "email" : "test@example.com",
                    "phoneNumber" : "01012345678"
                  }
      responses:
        '201':
          description: '201'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/RegisterMyPeopleResponse'
              examples:
                people/register-my-people:
                  value: |-
                    {
                      "status" : 201,
                      "data" : {
                        "peopleId" : 1
                      }
                    }
  /get-p/v2/people/{peopleId}:
    get:
      tags:
      - 피플
      summary: 피플 상세 정보 조회
      description: 사용자는 피플 상세 정보를 조회할 수 있다.
      operationId: people/get-people
      parameters:
      - name: peopleId
        in: path
        description: 피플 ID
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: false
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '200':
          description: '200'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/DetailPeopleResponse'
              examples:
                people/get-people:
                  value: |-
                    {
                      "status" : 200,
                      "data" : {
                        "peopleId" : 1,
                        "nickname" : "닉네임",
                        "profileImageUri" : "https://storage.principes.xyz/images/1/profile/image.jpg",
                        "completedProjectsCount" : 0,
                        "likesCount" : 0,
                        "liked" : true,
                        "profile" : {
                          "introduction" : "안녕하세요, 신찬규입니다.",
                          "activityArea" : "대구광역시 달서구",
                          "education" : {
                            "school" : "경북대학교",
                            "major" : "컴퓨터공학"
                          },
                          "techStacks" : [ "Java", "Spring", "JPA" ],
                          "hashtags" : [ "#해시태그1", "#해시태그2" ],
                          "portfolios" : [ {
                            "description" : "포트폴리오1 내용",
                            "url" : "https://github.com/scv1702/1"
                          }, {
                            "description" : "포트폴리오2 내용",
                            "url" : "https://github.com/scv1702/2"
                          } ]
                        }
                      }
                    }
  /get-p/v2/projects/{projectId}:
    get:
      tags:
      - 프로젝트
      summary: 프로젝트 상세 조회
      description: 사용자는 프로젝트의 상세 정보를 조회할 수 있다.
      operationId: project/get-project
      parameters:
      - name: projectId
        in: path
        description: 프로젝트 ID
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: false
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '200':
          description: '200'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/DetailProjectResponse'
              examples:
                project/get-project:
                  value: |-
                    {
                      "status" : 200,
                      "data" : {
                        "projectId" : 1,
                        "title" : "프로젝트 제목",
                        "payment" : 1000000,
                        "recruitmentCount" : 1,
                        "applicantsCount" : 5,
                        "applicationDuration" : {
                          "startDate" : "2024-07-01",
                          "endDate" : "2024-07-07"
                        },
                        "estimatedDuration" : {
                          "startDate" : "2024-07-14",
                          "endDate" : "2024-07-21"
                        },
                        "description" : "프로젝트 설명",
                        "meetingType" : "IN_PERSON",
                        "category" : "BACKEND",
                        "status" : "APPLICATION_OPENED",
                        "attachmentFiles" : [ "https://example.com/attachment1", "https://example.com/attachment2" ],
                        "hashtags" : [ "#해시태그1", "#해시태그2" ],
                        "likesCount" : 5,
                        "liked" : true,
                        "client" : {
                          "clientId" : 1,
                          "nickname" : "닉네임",
                          "address" : {
                            "zipcode" : "41566",
                            "street" : "대구광역시 북구 대학로 80",
                            "detail" : "IT대학 융복합관"
                          }
                        }
                      }
                    }
  /get-p/v2/storage/files:
    post:
      tags:
      - 스토리지
      summary: 파일 업로드
      description: 사용자는 파일을 업로드할 수 있다.
      operationId: storage/upload-file
      parameters:
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '201':
          description: '201'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/UploadFileResponse'
              examples:
                storage/upload-file:
                  value: |-
                    {
                      "status" : 201,
                      "data" : {
                        "fileUri" : "https://storage.principes.xyz/1/files/1/test.pdf"
                      }
                    }
  /get-p/v2/teammates/approve:
    get:
      tags:
      - 프로젝트 지원
      summary: 프로젝트 팀원 신청 승인
      description: 피플은 팀원 신청을 승인할 수 있다.
      operationId: project/approve-teammate
      parameters:
      - name: token
        in: query
        description: 팀원 승인 토큰
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '200':
          description: '200'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              examples:
                project/approve-teammate:
                  value: |-
                    {
                      "status" : 200
                    }
  /get-p/v2/applications/me/{applicationId}:
    get:
      tags:
      - 프로젝트 지원
      summary: 프로젝트 지원 내역 조회
      description: 피플은 자신의 프로젝트 지원 내역을 조회할 수 있다.
      operationId: project/get-application-detail
      parameters:
      - name: applicationId
        in: path
        description: 프로젝트 지원 ID
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: false
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '200':
          description: '200'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ProjectApplicationDetailResponse'
              examples:
                project/get-application-detail:
                  value: |-
                    {
                      "status" : 200,
                      "data" : {
                        "applicationId" : 1,
                        "type" : "TEAM",
                        "project" : {
                          "projectId" : 1,
                          "title" : "프로젝트 제목",
                          "payment" : 1000000,
                          "recruitmentCount" : 1,
                          "applicantsCount" : 5,
                          "applicationDuration" : {
                            "startDate" : "2024-07-01",
                            "endDate" : "2024-07-07"
                          },
                          "estimatedDuration" : {
                            "startDate" : "2024-07-14",
                            "endDate" : "2024-07-21"
                          },
                          "description" : "프로젝트 설명",
                          "meetingType" : "IN_PERSON",
                          "category" : "BACKEND",
                          "status" : "APPLICATION_OPENED",
                          "attachmentFiles" : [ "https://example.com/attachment1", "https://example.com/attachment2" ],
                          "hashtags" : [ "#해시태그1", "#해시태그2" ],
                          "likesCount" : 5,
                          "liked" : true,
                          "client" : {
                            "clientId" : 1,
                            "nickname" : "닉네임",
                            "address" : {
                              "zipcode" : "41566",
                              "street" : "대구광역시 북구 대학로 80",
                              "detail" : "IT대학 융복합관"
                            }
                          }
                        },
                        "expectedDuration" : {
                          "startDate" : "2024-07-01",
                          "endDate" : "2024-07-31"
                        },
                        "status" : "COMPLETED",
                        "description" : "지원 내용",
                        "attachmentFiles" : [ "https://example.com/attachment1", "https://example.com/attachment2" ],
                        "teammates" : [ {
                          "peopleId" : 2,
                          "nickname" : "닉네임2",
                          "status" : "APPROVED",
                          "profileImageUrl" : "https://storage.principes.xyz/images/2/profile/image.jpg"
                        }, {
                          "peopleId" : 3,
                          "nickname" : "닉네임3",
                          "status" : "PENDING",
                          "profileImageUrl" : "https://storage.principes.xyz/images/3/profile/image.jpg"
                        }, {
                          "peopleId" : 4,
                          "nickname" : "닉네임4",
                          "status" : "APPROVED",
                          "profileImageUrl" : "https://storage.principes.xyz/images/4/profile/image.jpg"
                        } ]
                      }
                    }
  /get-p/v2/member/me/profile-image:
    post:
      tags:
      - 회원
      summary: 프로필 사진 업로드
      description: 사용자는 프로필 사진을 올릴 수 있다.
      operationId: member/upload-profile-image
      parameters:
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '201':
          description: '201'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/UploadProfileImageResponse'
              examples:
                member/upload-profile-image:
                  value: |-
                    {
                      "status" : 201,
                      "data" : {
                        "profileImageUri" : "https://storage.principes.xyz/images/1/profile/image.jpg"
                      }
                    }
  /get-p/v2/people/me/profile:
    get:
      tags:
      - 피플
      summary: 내 피플 프로필 조회
      description: 피플은 자신의 프로필을 조회할 수 있다.
      operationId: people/get-my-people-profile
      parameters:
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '200':
          description: '200'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/DetailPeopleProfileResponse'
              examples:
                people/get-my-people-profile:
                  value: |-
                    {
                      "status" : 200,
                      "data" : {
                        "introduction" : "안녕하세요, 신찬규입니다.",
                        "activityArea" : "대구광역시 달서구",
                        "education" : {
                          "school" : "경북대학교",
                          "major" : "컴퓨터공학"
                        },
                        "techStacks" : [ "Java", "Spring", "JPA" ],
                        "hashtags" : [ "#해시태그1", "#해시태그2" ],
                        "portfolios" : [ {
                          "description" : "포트폴리오1 내용",
                          "url" : "https://github.com/scv1702/1"
                        }, {
                          "description" : "포트폴리오2 내용",
                          "url" : "https://github.com/scv1702/2"
                        } ]
                      }
                    }
    put:
      tags:
      - 피플
      summary: 내 피플 프로필 수정
      description: 피플은 자신의 프로필을 수정할 수 있다.
      operationId: people/edit-my-people-profile
      parameters:
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/EditMyPeopleProfileRequest'
            examples:
              people/edit-my-people-profile:
                value: |-
                  {
                    "education" : {
                      "school" : "경북대학교",
                      "major" : "컴퓨터공학"
                    },
                    "activityArea" : "대구광역시 달서구",
                    "introduction" : "안녕하세요, 신찬규입니다.",
                    "techStacks" : [ "Java", "Spring", "JPA" ],
                    "portfolios" : [ {
                      "description" : "포트폴리오1 내용",
                      "url" : "https://github.com/scv1702/1"
                    }, {
                      "description" : "포트폴리오2 내용",
                      "url" : "https://github.com/scv1702/2"
                    } ],
                    "hashtags" : [ "#해시태그1", "#해시태그2" ]
                  }
      responses:
        '200':
          description: '200'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              examples:
                people/edit-my-people-profile:
                  value: |-
                    {
                      "status" : 200
                    }
    post:
      tags:
      - 피플
      summary: 내 피플 프로필 등록
      description: 피플은 자신의 프로필을 등록할 수 있다.
      operationId: people/register-my-people-profile
      parameters:
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/RegisterMyPeopleProfileRequest'
            examples:
              people/register-my-people-profile:
                value: |-
                  {
                    "education" : {
                      "school" : "경북대학교",
                      "major" : "컴퓨터공학"
                    },
                    "activityArea" : "대구광역시 달서구",
                    "introduction" : "안녕하세요, 신찬규입니다.",
                    "techStacks" : [ "Java", "Spring", "JPA" ],
                    "portfolios" : [ {
                      "description" : "포트폴리오1 내용",
                      "url" : "https://github.com/scv1702/1"
                    }, {
                      "description" : "포트폴리오2 내용",
                      "url" : "https://github.com/scv1702/2"
                    } ],
                    "hashtags" : [ "#해시태그1", "#해시태그2" ]
                  }
      responses:
        '201':
          description: '201'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              examples:
                people/register-my-people-profile:
                  value: |-
                    {
                      "status" : 201
                    }
  /get-p/v2/people/{peopleId}/likes:
    post:
      tags:
      - 좋아요
      summary: 피플 좋아요
      description: 의뢰자는 피플에게 좋아요를 누를 수 있다.
      operationId: like/like-people
      parameters:
      - name: peopleId
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '201':
          description: '201'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              examples:
                like/like-people:
                  value: |-
                    {
                      "status" : 201
                    }
    delete:
      tags:
      - 좋아요
      summary: 피플 좋아요 취소
      description: 의뢰자는 피플에게 눌렀던 좋아요를 취소를 할 수 있다.
      operationId: like/unlike-people
      parameters:
      - name: peopleId
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '204':
          description: '204'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              examples:
                like/unlike-people:
                  value: |-
                    {
                      "status" : 204
                    }
  /get-p/v2/projects/{projectId}/applicants:
    get:
      tags:
      - 의뢰자 프로젝트 관리
      summary: 프로젝트 지원자 목록 조회
      description: 의뢰자는 프로젝트 지원자 목록을 조회할 수 있다.
      operationId: project/get-applicants
      parameters:
      - name: projectId
        in: path
        description: 프로젝트 ID
        required: true
        schema:
          type: string
      - name: size
        in: query
        description: 페이지 크기
        required: false
        schema:
          type: string
      - name: cursor
        in: query
        description: 페이지에 대한 커서. 첫 페이지를 조회할 땐 생략할 수 있어요.
        required: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: false
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '200':
          description: '200'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/PagedProjectApplicantResponse'
              examples:
                project/get-applicants:
                  value: |-
                    {
                      "status" : 200,
                      "data" : {
                        "content" : [ {
                          "peopleId" : 1,
                          "nickname" : "닉네임1",
                          "profileImageUrl" : "https://storage.principes.xyz/images/1/profile/image.jpg",
                          "education" : {
                            "school" : "경북대학교",
                            "major" : "컴퓨터공학"
                          },
                          "status" : "COMPLETED"
                        }, {
                          "peopleId" : 2,
                          "nickname" : "닉네임2",
                          "profileImageUrl" : "https://storage.principes.xyz/images/2/profile/image.jpg",
                          "education" : {
                            "school" : "경북대학교",
                            "major" : "컴퓨터공학"
                          },
                          "status" : "COMPLETED"
                        }, {
                          "peopleId" : 3,
                          "nickname" : "닉네임3",
                          "profileImageUrl" : "https://storage.principes.xyz/images/3/profile/image.jpg",
                          "education" : {
                            "school" : "경북대학교",
                            "major" : "컴퓨터공학"
                          },
                          "status" : "COMPLETED"
                        }, {
                          "peopleId" : 4,
                          "nickname" : "닉네임4",
                          "profileImageUrl" : "https://storage.principes.xyz/images/4/profile/image.jpg",
                          "education" : {
                            "school" : "경북대학교",
                            "major" : "컴퓨터공학"
                          },
                          "status" : "COMPLETED",
                          "teammates" : [ {
                            "peopleId" : 5,
                            "nickname" : "닉네임5",
                            "profileImageUrl" : "https://storage.principes.xyz/images/5/profile/image.jpg"
                          }, {
                            "peopleId" : 6,
                            "nickname" : "닉네임6",
                            "profileImageUrl" : "https://storage.principes.xyz/images/6/profile/image.jpg"
                          } ]
                        }, {
                          "peopleId" : 5,
                          "nickname" : "닉네임5",
                          "profileImageUrl" : "https://storage.principes.xyz/images/5/profile/image.jpg",
                          "education" : {
                            "school" : "경북대학교",
                            "major" : "컴퓨터공학"
                          },
                          "status" : "COMPLETED",
                          "teammates" : [ {
                            "peopleId" : 6,
                            "nickname" : "닉네임6",
                            "profileImageUrl" : "https://storage.principes.xyz/images/6/profile/image.jpg"
                          }, {
                            "peopleId" : 7,
                            "nickname" : "닉네임7",
                            "profileImageUrl" : "https://storage.principes.xyz/images/7/profile/image.jpg"
                          } ]
                        } ],
                        "sliceInfo" : {
                          "size" : 5,
                          "numberOfElements" : 5,
                          "first" : true,
                          "last" : false,
                          "empty" : false,
                          "cursor" : "eyJpZCI6IDIwfQ==",
                          "sort" : null
                        }
                      }
                    }
  /get-p/v2/projects/{projectId}/applications:
    post:
      tags:
      - 프로젝트 지원
      summary: 프로젝트 지원
      description: 피플은 프로젝트에 개인/팀으로 지원할 수 있다.
      operationId: project/apply-project-as-
      parameters:
      - name: projectId
        in: path
        description: 프로젝트 ID
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/ApplyProjectAsTeamRequest'
            examples:
              project/apply-project-as-team:
                value: |-
                  {
                    "type" : "TEAM",
                    "expectedDuration" : {
                      "startDate" : "2024-07-01",
                      "endDate" : "2024-07-31"
                    },
                    "description" : "지원 내용",
                    "attachmentFiles" : [ "https://example.com/attachment1", "https://example.com/attachment2" ],
                    "teammates" : [ 2, 1, 4, 3 ]
                  }
              project/apply-project-as-individual:
                value: |-
                  {
                    "type" : "INDIVIDUAL",
                    "expectedDuration" : {
                      "startDate" : "2024-07-01",
                      "endDate" : "2024-07-31"
                    },
                    "description" : "지원 내용",
                    "attachmentFiles" : [ "https://example.com/attachment1", "https://example.com/attachment2" ]
                  }
      responses:
        '201':
          description: '201'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ApplyProjectResponse'
              examples:
                project/apply-project-as-team:
                  value: |-
                    {
                      "status" : 201,
                      "data" : {
                        "applicationId" : 1
                      }
                    }
                project/apply-project-as-individual:
                  value: |-
                    {
                      "status" : 201,
                      "data" : {
                        "applicationId" : 1
                      }
                    }
  /get-p/v2/projects/{projectId}/likes:
    post:
      tags:
      - 좋아요
      summary: 프로젝트 좋아요
      description: 피플은 프로젝트에 좋아요를 누를 수 있다.
      operationId: like/like-project
      parameters:
      - name: projectId
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '201':
          description: '201'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              examples:
                like/like-project:
                  value: |-
                    {
                      "status" : 201
                    }
    delete:
      tags:
      - 좋아요
      summary: 프로젝트 좋아요 취소
      description: 피플은 프로젝트에 눌렀던 좋아요를 취소할 수 있다.
      operationId: like/unlike-project
      parameters:
      - name: projectId
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '204':
          description: '204'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              examples:
                like/unlike-project:
                  value: |-
                    {
                      "status" : 204
                    }
  /get-p/v2/projects/{projectId}/meetings:
    post:
      tags:
      - 프로젝트 관리
      summary: 프로젝트 미팅 신청
      description: 의뢰자는 프로젝트 지원자에게 미팅 신청을 할 수 있다.
      operationId: project/schedule-meeting
      parameters:
      - name: projectId
        in: path
        description: ''
        required: true
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: true
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/ScheduleMeetingRequest'
            examples:
              project/schedule-meeting:
                value: |-
                  {
                    "applicantId" : 1,
                    "location" : "미팅 장소",
                    "schedule" : {
                      "date" : "2024-08-01",
                      "startTime" : "10:00:00",
                      "endTime" : "11:00:00"
                    },
                    "phoneNumber" : "01012345678",
                    "description" : "미팅 요구사항"
                  }
      responses:
        '201':
          description: '201'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/ScheduleMeetingResponse'
              examples:
                project/schedule-meeting:
                  value: |-
                    {
                      "status" : 201,
                      "data" : {
                        "meetingId" : 1
                      }
                    }
  /get-p/v2/projects/{projectId}/teammates:
    get:
      tags:
      - 프로젝트 지원
      summary: 프로젝트 팀원 검색
      description: 피플은 프로젝트 지원 시 팀원을 검색할 수 있다.
      operationId: project/search-teammates
      parameters:
      - name: projectId
        in: path
        description: 프로젝트 ID
        required: true
        schema:
          type: string
      - name: size
        in: query
        description: 페이지 크기
        required: false
        schema:
          type: string
      - name: nickname
        in: query
        description: 주어진 닉네임으로 시작하는 피플을 검색해요.
        required: false
        schema:
          type: string
      - name: cursor
        in: query
        description: 페이지에 대한 커서. 첫 페이지를 조회할 땐 생략할 수 있어요.
        required: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: Bearer ${ACCESS_TOKEN}
        required: false
        schema:
          type: string
        example: Bearer ${ACCESS_TOKEN}
      responses:
        '200':
          description: '200'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/SearchTeammateResponse'
              examples:
                project/search-teammates:
                  value: |-
                    {
                      "status" : 200,
                      "data" : {
                        "content" : [ {
                          "peopleId" : 10,
                          "nickname" : "닉네임10",
                          "profileImageUri" : "https://storage.principes.xyz/images/10/profile/image.jpg"
                        }, {
                          "peopleId" : 9,
                          "nickname" : "닉네임9",
                          "profileImageUri" : "https://storage.principes.xyz/images/9/profile/image.jpg"
                        }, {
                          "peopleId" : 8,
                          "nickname" : "닉네임8",
                          "profileImageUri" : "https://storage.principes.xyz/images/8/profile/image.jpg"
                        }, {
                          "peopleId" : 7,
                          "nickname" : "닉네임7",
                          "profileImageUri" : "https://storage.principes.xyz/images/7/profile/image.jpg"
                        }, {
                          "peopleId" : 6,
                          "nickname" : "닉네임6",
                          "profileImageUri" : "https://storage.principes.xyz/images/6/profile/image.jpg"
                        } ],
                        "sliceInfo" : {
                          "size" : 5,
                          "numberOfElements" : 5,
                          "first" : true,
                          "last" : false,
                          "empty" : false,
                          "cursor" : "eyJpZCI6IDIwfQ==",
                          "sort" : null
                        }
                      }
                    }
  /get-p/v2/auth/signup/email/send:
    post:
      tags:
      - 인증
      summary: 이메일 인증 코드 전송
      description: 사용자는 회원 가입 시 이메일 인증을 해야 한다.
      operationId: auth/send-email-verification-code-for-signup
      requestBody:
        content:
          application/json;charset=UTF-8:
            schema:
              $ref: '#/components/schemas/EmailVerificationCodeRequest'
            examples:
              auth/send-email-verification-code-for-signup:
                value: |-
                  {
                    "email" : "test@example.com"
                  }
      responses:
        '200':
          description: '200'
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/StatusResponse'
              examples:
                auth/send-email-verification-code-for-signup:
                  value: |-
                    {
                      "status" : 200
                    }
components:
  schemas:
    ProjectApplicationFormResponse:
      title: ProjectApplicationFormResponse
      type: object
      properties:
        data:
          type: object
          properties:
            education:
              type: object
              properties:
                major:
                  type: string
                  description: 지원자 전공
                school:
                  type: string
                  description: 지원자 학교
            portfolios:
              type: array
              items:
                type: object
                properties:
                  description:
                    type: string
                    description: 지원자 포트폴리오 설명
                  url:
                    type: string
                    description: 지원자 포트폴리오 링크
            attachmentFiles:
              type: array
              description: 첨부 파일
              items:
                oneOf:
                - type: object
                - type: boolean
                - type: string
                - type: number
            description:
              type: string
              description: 지원 내용
            project:
              type: object
              properties:
                hashtags:
                  type: array
                  description: 지원한 프로젝트 해시태그
                  items:
                    oneOf:
                    - type: object
                    - type: boolean
                    - type: string
                    - type: number
                attachmentFiles:
                  type: array
                  description: 지원한 프로젝트 첨부 파일
                  items:
                    oneOf:
                    - type: object
                    - type: boolean
                    - type: string
                    - type: number
                description:
                  type: string
                  description: 지원한 프로젝트 상세 설명
                title:
                  type: string
                  description: 지원한 프로젝트 제목
                meetingType:
                  type: string
                  description: 지원한 프로젝트 미팅 방식
                  enum:
                  - IN_PERSON
                  - REMOTE
                estimatedDuration:
                  type: object
                  properties:
                    endDate:
                      type: string
                      description: 지원한 프로젝트 예상 작업 종료 날짜
                    startDate:
                      type: string
                      description: 지원한 프로젝트 예상 작업 시작 날짜
                liked:
                  type: boolean
                  description: 지원한 프로젝트 좋아요 여부
                likesCount:
                  type: number
                  description: 지원한 프로젝트 좋아요 수
                applicationDuration:
                  type: object
                  properties:
                    endDate:
                      type: string
                      description: 지원한 프로젝트 지원자 모집 종료 날짜
                    startDate:
                      type: string
                      description: 지원한 프로젝트 지원자 모집 시작 날짜
                recruitmentCount:
                  type: number
                  description: 지원한 프로젝트 모집 인원
                applicantsCount:
                  type: number
                  description: 지원한 프로젝트 지원자 수
                client:
                  type: object
                  properties:
                    address:
                      type: object
                      properties:
                        zipcode:
                          type: string
                          description: 지원한 프로젝트 의뢰자 우편번호
                        street:
                          type: string
                          description: 지원한 프로젝트 의뢰자 도로명
                        detail:
                          type: string
                          description: 지원한 프로젝트 의뢰자 상세 주소
                    clientId:
                      type: number
                      description: 지원한 프로젝트 의뢰자 ID
                    nickname:
                      type: string
                      description: 지원한 프로젝트 의뢰자 닉네임
                payment:
                  type: number
                  description: 지원한 프로젝트 성공 보수
                category:
                  type: string
                  description: 지원한 프로젝트 카테고리
                  enum:
                  - FRONTEND
                  - BACKEND
                  - WEB
                  - PROGRAM
                  - ETC
                projectId:
                  type: number
                  description: 지원한 프로젝트 ID
                status:
                  type: string
                  description: 지원한 프로젝트 프로젝트 상태
                  enum:
                  - PREPARING
                  - APPLICATION_OPENED
                  - APPLICATION_CLOSED
                  - MEETING
                  - CONFIRMED
                  - PROGRESSING
                  - COMPLETED
                  - CANCELLED
            expectedDuration:
              type: object
              properties:
                endDate:
                  type: string
                  description: 예상 작업 종료 날짜
                startDate:
                  type: string
                  description: 예상 작업 시작 날짜
            type:
              type: string
              description: 프로젝트 지원 타입
              enum:
              - INDIVIDUAL
              - TEAM
            activityArea:
              type: string
              description: 지원자 활동 지역
            teammates:
              type: array
              description: 팀원 목록
              items:
                type: object
                properties:
                  peopleId:
                    type: number
                    description: 팀원 피플 ID
                  nickname:
                    type: string
                    description: 팀원 닉네임
                  profileImageUrl:
                    type: string
                    description: 팀원 프로필 이미지 URL
                  status:
                    type: string
                    description: 팀원 상태
                    enum:
                    - PENDING
                    - APPROVED
                    - REJECTED
                    - EXPIRED
            techStacks:
              type: array
              description: 지원자 기술 스택
              items:
                oneOf:
                - type: object
                - type: boolean
                - type: string
                - type: number
            nickname:
              type: string
              description: 지원자 닉네임
            applicationId:
              type: number
              description: 프로젝트 지원 ID
            introduction:
              type: string
              description: 지원자 자기 소개
            status:
              type: string
              description: 프로젝트 지원 상태
              enum:
              - PENDING_TEAM_APPROVAL
              - COMPLETED
              - WAITING_MEETING
              - MEETING_COMPLETED
              - ACCEPTED
              - CLOSED
        status:
          type: number
          description: 응답 상태
    ScheduleMeetingResponse:
      title: ScheduleMeetingResponse
      type: object
      properties:
        data:
          type: object
          properties:
            meetingId:
              type: number
              description: 미팅 ID
        status:
          type: number
          description: 응답 상태
    TokenResponse:
      title: TokenResponse
      type: object
      properties:
        data:
          type: object
          properties:
            accessToken:
              type: string
              description: Access Token
            grantType:
              type: string
              description: 토큰 타입
            refreshToken:
              type: string
              description: Refresh Token
        status:
          type: number
          description: 응답 상태
    ScheduleMeetingRequest:
      title: ScheduleMeetingRequest
      type: object
      properties:
        schedule:
          type: object
          properties:
            date:
              type: string
              description: 미팅 날짜
            startTime:
              type: string
              description: 미팅 시작 시간
            endTime:
              type: string
              description: 미팅 종료 시간
        phoneNumber:
          type: string
          description: 연락처
        description:
          type: string
          description: 요구사항
        location:
          type: string
          description: 미팅 장소
        applicantId:
          type: number
          description: 지원자 ID
    DetailProjectResponse:
      title: DetailProjectResponse
      type: object
      properties:
        data:
          type: object
          properties:
            hashtags:
              type: array
              description: 해시태그
              items:
                oneOf:
                - type: object
                - type: boolean
                - type: string
                - type: number
            attachmentFiles:
              type: array
              description: 첨부 파일
              items:
                oneOf:
                - type: object
                - type: boolean
                - type: string
                - type: number
            description:
              type: string
              description: 상세 설명
            title:
              type: string
              description: 제목
            meetingType:
              type: string
              description: 미팅 방식
              enum:
              - IN_PERSON
              - REMOTE
            estimatedDuration:
              type: object
              properties:
                endDate:
                  type: string
                  description: 예상 작업 종료 날짜
                startDate:
                  type: string
                  description: 예상 작업 시작 날짜
            liked:
              type: boolean
              description: 좋아요 여부
            likesCount:
              type: number
              description: 좋아요 수
            applicationDuration:
              type: object
              properties:
                endDate:
                  type: string
                  description: 지원자 모집 종료 날짜
                startDate:
                  type: string
                  description: 지원자 모집 시작 날짜
            recruitmentCount:
              type: number
              description: 모집 인원
            applicantsCount:
              type: number
              description: 지원자 수
            client:
              type: object
              properties:
                address:
                  type: object
                  properties:
                    zipcode:
                      type: string
                      description: 의뢰자 우편번호
                    street:
                      type: string
                      description: 의뢰자 도로명
                    detail:
                      type: string
                      description: 의뢰자 상세 주소
                clientId:
                  type: number
                  description: 의뢰자 ID
                nickname:
                  type: string
                  description: 의뢰자 닉네임
            payment:
              type: number
              description: 성공 보수
            category:
              type: string
              description: 카테고리
              enum:
              - FRONTEND
              - BACKEND
              - WEB
              - PROGRAM
              - ETC
            projectId:
              type: number
              description: 프로젝트 ID
            status:
              type: string
              description: 프로젝트 상태
              enum:
              - PREPARING
              - APPLICATION_OPENED
              - APPLICATION_CLOSED
              - MEETING
              - CONFIRMED
              - PROGRESSING
              - COMPLETED
              - CANCELLED
        status:
          type: number
          description: 응답 상태
    SignUpRequest:
      title: SignUpRequest
      type: object
      properties:
        password:
          type: string
          description: 비밀번호
        serviceTerms:
          type: array
          items:
            type: object
            properties:
              tag:
                type: string
                description: 서비스 약관 태그
              agreed:
                type: boolean
                description: 서비스 약관 동의 여부
        memberType:
          type: string
          description: 회원 유형. 일반 사용자는 피플인 ROLE_PEOPLE 또는 의뢰자인 ROLE_CLIENT만 가능
          enum:
          - ROLE_PEOPLE
          - ROLE_CLIENT
          - ROLE_MANAGER
          - ROLE_ADMIN
        email:
          type: string
          description: 이메일
        verificationCode:
          type: string
          description: 이메일 인증 코드
    StatusResponse:
      title: StatusResponse
      type: object
      properties:
        status:
          type: number
          description: 응답 상태
    RegisterMyPeopleResponse:
      title: RegisterMyPeopleResponse
      type: object
      properties:
        data:
          type: object
          properties:
            peopleId:
              type: number
              description: 피플 ID
        status:
          type: number
          description: 응답 상태
    CommissionProjectRequest:
      title: CommissionProjectRequest
      type: object
      properties:
        hashtags:
          type: array
          description: 해시태그
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        applicationDuration:
          type: object
          properties:
            endDate:
              type: string
              description: 지원자 모집 종료 기간
            startDate:
              type: string
              description: 지원자 모집 시작 기간
        recruitmentCount:
          type: number
          description: 모집 인원
        attachmentFiles:
          type: array
          description: 첨부 파일
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        description:
          type: string
          description: 상세 설명
        payment:
          type: number
          description: 성공 보수
        category:
          type: string
          description: 카테고리
          enum:
          - FRONTEND
          - BACKEND
          - WEB
          - PROGRAM
          - ETC
        title:
          type: string
          description: 제목
        meetingType:
          type: string
          description: 미팅 방식
          enum:
          - IN_PERSON
          - REMOTE
        estimatedDuration:
          type: object
          properties:
            endDate:
              type: string
              description: 예상 작업 종료 기간
            startDate:
              type: string
              description: 예상 작업 시작 기간
    DetailPeopleResponse:
      title: DetailPeopleResponse
      type: object
      properties:
        data:
          type: object
          properties:
            likesCount:
              type: number
              description: 받은 좋아요 수
            peopleId:
              type: number
              description: 피플 ID
            profile:
              type: object
              properties:
                activityArea:
                  type: string
                  description: 활동 지역
                education:
                  type: object
                  properties:
                    major:
                      type: string
                      description: 전공
                    school:
                      type: string
                      description: 학교
                hashtags:
                  type: array
                  description: 해시태그
                  items:
                    oneOf:
                    - type: object
                    - type: boolean
                    - type: string
                    - type: number
                techStacks:
                  type: array
                  description: 기술 스택
                  items:
                    oneOf:
                    - type: object
                    - type: boolean
                    - type: string
                    - type: number
                portfolios:
                  type: array
                  items:
                    type: object
                    properties:
                      description:
                        type: string
                        description: 포트폴리오 설명
                      url:
                        type: string
                        description: 포트폴리오 URL
                introduction:
                  type: string
                  description: 소개
            nickname:
              type: string
              description: 닉네임
            profileImageUri:
              type: string
              description: 프로필 이미지 URI
            completedProjectsCount:
              type: number
              description: 완수한 프로젝트 수
            liked:
              type: boolean
              description: 좋아요 여부
        status:
          type: number
          description: 응답 상태
    RegisterMyPeopleProfileRequest:
      title: RegisterMyPeopleProfileRequest
      type: object
      properties:
        activityArea:
          type: string
          description: 활동 지역
        education:
          type: object
          properties:
            major:
              type: string
              description: 전공명
            school:
              type: string
              description: 학교명
          description: 학력
        hashtags:
          type: array
          description: 해시태그
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        techStacks:
          type: array
          description: 기술 스택
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        portfolios:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                description: 포트폴리오 설명
              url:
                type: string
                description: 포트폴리오 URL
        introduction:
          type: string
          description: 소개
    MemberResponse:
      title: MemberResponse
      type: object
      properties:
        data:
          type: object
          properties:
            createdAt:
              type: string
              description: 회원 가입일
            nickname:
              type: string
              description: 닉네임
            profileImageUri:
              type: string
              description: 프로필 사진 URI
            memberType:
              type: string
              description: 회원 유형
            email:
              type: string
              description: 이메일
            updatedAt:
              type: string
              description: 회원 정보 수정일
            memberId:
              type: number
              description: 회원 ID
        status:
          type: number
          description: 응답 상태
    ApplyProjectAsTeamRequest:
      title: ApplyProjectAsTeamRequest
      type: object
      properties:
        teammates:
          type: array
          description: 팀원 정보. 각 팀원의 피플 ID 리스트
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        attachmentFiles:
          type: array
          description: 첨부 파일
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        description:
          type: string
          description: 지원 내용
        expectedDuration:
          type: object
          properties:
            endDate:
              type: string
              description: 예상 작업 종료 기간
            startDate:
              type: string
              description: 예상 작업 시작 기간
        type:
          type: string
          description: 지원 유형. 개인으로 지원할 경우 INDIVIDUAL로 설정
          enum:
          - INDIVIDUAL
          - TEAM
    ProjectApplicationDetailResponse:
      title: ProjectApplicationDetailResponse
      type: object
      properties:
        data:
          type: object
          properties:
            teammates:
              type: array
              description: 팀원 목록
              items:
                type: object
                properties:
                  peopleId:
                    type: number
                    description: 팀원 피플 ID
                  nickname:
                    type: string
                    description: 팀원 닉네임
                  profileImageUrl:
                    type: string
                    description: 팀원 프로필 이미지 URL
                  status:
                    type: string
                    description: 팀원 상태
                    enum:
                    - PENDING
                    - APPROVED
                    - REJECTED
                    - EXPIRED
            attachmentFiles:
              type: array
              description: 첨부 파일
              items:
                oneOf:
                - type: object
                - type: boolean
                - type: string
                - type: number
            description:
              type: string
              description: 지원 내용
            project:
              type: object
              properties:
                hashtags:
                  type: array
                  description: 지원한 프로젝트 해시태그
                  items:
                    oneOf:
                    - type: object
                    - type: boolean
                    - type: string
                    - type: number
                attachmentFiles:
                  type: array
                  description: 지원한 프로젝트 첨부 파일
                  items:
                    oneOf:
                    - type: object
                    - type: boolean
                    - type: string
                    - type: number
                description:
                  type: string
                  description: 지원한 프로젝트 상세 설명
                title:
                  type: string
                  description: 지원한 프로젝트 제목
                meetingType:
                  type: string
                  description: 지원한 프로젝트 미팅 방식
                  enum:
                  - IN_PERSON
                  - REMOTE
                estimatedDuration:
                  type: object
                  properties:
                    endDate:
                      type: string
                      description: 지원한 프로젝트 예상 작업 종료 날짜
                    startDate:
                      type: string
                      description: 지원한 프로젝트 예상 작업 시작 날짜
                liked:
                  type: boolean
                  description: 지원한 프로젝트 좋아요 여부
                likesCount:
                  type: number
                  description: 지원한 프로젝트 좋아요 수
                applicationDuration:
                  type: object
                  properties:
                    endDate:
                      type: string
                      description: 지원한 프로젝트 지원자 모집 종료 날짜
                    startDate:
                      type: string
                      description: 지원한 프로젝트 지원자 모집 시작 날짜
                recruitmentCount:
                  type: number
                  description: 지원한 프로젝트 모집 인원
                applicantsCount:
                  type: number
                  description: 지원한 프로젝트 지원자 수
                client:
                  type: object
                  properties:
                    address:
                      type: object
                      properties:
                        zipcode:
                          type: string
                          description: 지원한 프로젝트 의뢰자 우편번호
                        street:
                          type: string
                          description: 지원한 프로젝트 의뢰자 도로명
                        detail:
                          type: string
                          description: 지원한 프로젝트 의뢰자 상세 주소
                    clientId:
                      type: number
                      description: 지원한 프로젝트 의뢰자 ID
                    nickname:
                      type: string
                      description: 지원한 프로젝트 의뢰자 닉네임
                payment:
                  type: number
                  description: 지원한 프로젝트 성공 보수
                category:
                  type: string
                  description: 지원한 프로젝트 카테고리
                  enum:
                  - FRONTEND
                  - BACKEND
                  - WEB
                  - PROGRAM
                  - ETC
                projectId:
                  type: number
                  description: 지원한 프로젝트 ID
                status:
                  type: string
                  description: 지원한 프로젝트 프로젝트 상태
                  enum:
                  - PREPARING
                  - APPLICATION_OPENED
                  - APPLICATION_CLOSED
                  - MEETING
                  - CONFIRMED
                  - PROGRESSING
                  - COMPLETED
                  - CANCELLED
              description: 지원한 프로젝트
            expectedDuration:
              type: object
              properties:
                endDate:
                  type: string
                  description: 예상 작업 종료 날짜
                startDate:
                  type: string
                  description: 예상 작업 시작 날짜
            type:
              type: string
              description: 프로젝트 지원 타입
              enum:
              - INDIVIDUAL
              - TEAM
            applicationId:
              type: number
              description: 프로젝트 지원 ID
            status:
              type: string
              description: 프로젝트 지원 상태
              enum:
              - PENDING_TEAM_APPROVAL
              - COMPLETED
              - WAITING_MEETING
              - MEETING_COMPLETED
              - ACCEPTED
              - CLOSED
        status:
          type: number
          description: 응답 상태
    LoginRequest:
      title: LoginRequest
      type: object
      properties:
        password:
          type: string
          description: 비밀번호
        email:
          type: string
          description: 이메일
    ApplyProjectResponse:
      title: ApplyProjectResponse
      type: object
      properties:
        data:
          type: object
          properties:
            applicationId:
              type: number
              description: 프로젝트 지원 ID
        status:
          type: number
          description: 응답 상태
    ClientResponse:
      title: ClientResponse
      type: object
      properties:
        data:
          type: object
          properties:
            createdAt:
              type: string
              description: 의뢰자 정보 등록 일시
            address:
              type: object
              properties:
                zipcode:
                  type: string
                  description: 우편번호
                street:
                  type: string
                  description: 도로명 주소
                detail:
                  type: string
                  description: 상세 주소
            phoneNumber:
              type: string
              description: 전화번호
            clientId:
              type: number
              description: 의뢰자 ID
            nickname:
              type: string
              description: 닉네임
            profileImageUri:
              type: string
              description: 프로필 이미지 URI
            email:
              type: string
              description: 이메일
            updatedAt:
              type: string
              description: 최근 의뢰자 정보 수정 일시
        status:
          type: number
          description: 응답 상태
    PagedCardPeopleResponse:
      title: PagedCardPeopleResponse
      type: object
      properties:
        data:
          type: object
          properties:
            pageInfo:
              type: object
              properties:
                number:
                  type: number
                  description: 현재 페이지 번호
                last:
                  type: boolean
                  description: 마지막 페이지 여부
                numberOfElements:
                  type: number
                  description: 현재 페이지 요소 수
                size:
                  type: number
                  description: 페이지 크기
                totalPages:
                  type: number
                  description: 전체 페이지 수
                sort:
                  type: object
                  properties:
                    property:
                      type: string
                      description: 정렬 속성
                    direction:
                      type: string
                      description: 정렬 방향
                      enum:
                      - ASC
                      - DESC
                first:
                  type: boolean
                  description: 첫 페이지 여부
                empty:
                  type: boolean
                  description: 비어있는 페이지 여부
                totalElements:
                  type: number
                  description: 전체 요소 수
            content:
              type: array
              items:
                type: object
                properties:
                  likesCount:
                    type: number
                    description: 받은 좋아요 수
                  peopleId:
                    type: number
                    description: 피플 ID
                  profile:
                    type: object
                    properties:
                      activityArea:
                        type: string
                        description: 활동 지역
                      hashtags:
                        type: array
                        description: 해시태그
                        items:
                          oneOf:
                          - type: object
                          - type: boolean
                          - type: string
                          - type: number
                      introduction:
                        type: string
                        description: 소개
                  nickname:
                    type: string
                    description: 닉네임
                  profileImageUri:
                    type: string
                    description: 프로필 이미지 URI
                  completedProjectsCount:
                    type: number
                    description: 완수한 프로젝트 수
        status:
          type: number
          description: 응답 상태
    SearchTeammateResponse:
      title: SearchTeammateResponse
      type: object
      properties:
        data:
          type: object
          properties:
            sliceInfo:
              type: object
              properties:
                cursor:
                  type: string
                  description: 다음 페이지에 대한 커서. 다음 페이지를 요청할 때 이전 페이지 응답에서 받은 커서 값을 넣어주세요.
                last:
                  type: boolean
                  description: 마지막 페이지 여부
                numberOfElements:
                  type: number
                  description: 현재 페이지 요소 수
                size:
                  type: number
                  description: 페이지 크기
                sort:
                  type: object
                  properties:
                    property:
                      type: string
                      description: 정렬 속성
                    direction:
                      type: string
                      description: 정렬 방향
                      enum:
                      - ASC
                      - DESC
                first:
                  type: boolean
                  description: 첫 페이지 여부
                empty:
                  type: boolean
                  description: 비어있는 페이지 여부
            content:
              type: array
              items:
                type: object
                properties:
                  peopleId:
                    type: number
                    description: 피플 ID
                  nickname:
                    type: string
                    description: 닉네임
                  profileImageUri:
                    type: string
                    description: 프로필 이미지 URI
        status:
          type: number
          description: 응답 상태
    RegisterMyClientResponse:
      title: RegisterMyClientResponse
      type: object
      properties:
        data:
          type: object
          properties:
            clientId:
              type: number
              description: 등록된 의뢰자 ID
        status:
          type: number
          description: 응답 상태
    DetailPeopleProfileResponse:
      title: DetailPeopleProfileResponse
      type: object
      properties:
        data:
          type: object
          properties:
            activityArea:
              type: string
              description: 활동 지역
            education:
              type: object
              properties:
                major:
                  type: string
                  description: 전공
                school:
                  type: string
                  description: 학력
            hashtags:
              type: array
              description: 해시태그
              items:
                oneOf:
                - type: object
                - type: boolean
                - type: string
                - type: number
            techStacks:
              type: array
              description: 기술 스택
              items:
                oneOf:
                - type: object
                - type: boolean
                - type: string
                - type: number
            portfolios:
              type: array
              items:
                type: object
                properties:
                  description:
                    type: string
                    description: 포트폴리오 설명
                  url:
                    type: string
                    description: 포트폴리오 URL
            introduction:
              type: string
              description: 소개
        status:
          type: number
          description: 응답 상태
    RegisterMyPeopleRequest:
      title: RegisterMyPeopleRequest
      type: object
      properties:
        phoneNumber:
          type: string
          description: 전화번호
        nickname:
          type: string
          description: 닉네임
        email:
          type: string
          description: 이메일. 미입력 시 회원 정보의 이메일로 등록됩니다.
    PagedProjectApplicantResponse:
      title: PagedProjectApplicantResponse
      type: object
      properties:
        data:
          type: object
          properties:
            sliceInfo:
              type: object
              properties:
                cursor:
                  type: string
                  description: 다음 페이지에 대한 커서. 다음 페이지를 요청할 때 이전 페이지 응답에서 받은 커서 값을 넣어주세요.
                last:
                  type: boolean
                  description: 마지막 페이지 여부
                numberOfElements:
                  type: number
                  description: 현재 페이지 요소 수
                size:
                  type: number
                  description: 페이지 크기
                sort:
                  type: object
                  properties:
                    property:
                      type: string
                      description: 정렬 속성
                    direction:
                      type: string
                      description: 정렬 방향
                      enum:
                      - ASC
                      - DESC
                first:
                  type: boolean
                  description: 첫 페이지 여부
                empty:
                  type: boolean
                  description: 비어있는 페이지 여부
            content:
              type: array
              items:
                type: object
                properties:
                  teammates:
                    type: array
                    description: 팀원 목록
                    items:
                      type: object
                      properties:
                        peopleId:
                          type: number
                          description: 팀원의 피플 ID
                        nickname:
                          type: string
                          description: 팀원의 닉네임
                        profileImageUrl:
                          type: string
                          description: 팀원의 프로필 이미지 URL
                  education:
                    type: object
                    properties:
                      major:
                        type: string
                        description: 전공명
                      school:
                        type: string
                        description: 학교명
                    description: 학력
                  peopleId:
                    type: number
                    description: 지원자의 피플 ID
                  nickname:
                    type: string
                    description: 지원자의 닉네임
                  profileImageUrl:
                    type: string
                    description: 지원자의 프로필 이미지 URL
                  status:
                    type: string
                    description: 프로젝트 지원 상태
                    enum:
                    - PENDING_TEAM_APPROVAL
                    - COMPLETED
                    - WAITING_MEETING
                    - MEETING_COMPLETED
                    - ACCEPTED
                    - CLOSED
        status:
          type: number
          description: 응답 상태
    RegisterMyClientRequest:
      title: RegisterMyClientRequest
      type: object
      properties:
        address:
          type: object
          properties:
            zipcode:
              type: string
              description: 우편번호
            street:
              type: string
              description: 도로명 주소
            detail:
              type: string
              description: 상세 주소
          description: 주소
        phoneNumber:
          type: string
          description: 전화번호
        nickname:
          type: string
          description: 닉네임
        email:
          type: string
          description: 이메일. 미입력 시 회원 정보의 이메일로 등록됩니다.
    EditMyClientRequest:
      title: EditMyClientRequest
      type: object
      properties:
        address:
          type: object
          properties:
            zipcode:
              type: string
              description: 우편번호
            street:
              type: string
              description: 도로명 주소
            detail:
              type: string
              description: 상세 주소
          description: 주소
        phoneNumber:
          type: string
          description: 전화번호
        nickname:
          type: string
          description: 닉네임
        email:
          type: string
          description: 이메일
    MyPeopleResponse:
      title: MyPeopleResponse
      type: object
      properties:
        data:
          type: object
          properties:
            createdAt:
              type: string
              description: 피플 정보 등록 일시
            likesCount:
              type: number
              description: 받은 좋아요 수
            phoneNumber:
              type: string
              description: 전화번호
            peopleId:
              type: number
              description: 피플 ID
            nickname:
              type: string
              description: 닉네임
            profileImageUri:
              type: string
              description: 프로필 이미지 URI
            completedProjectsCount:
              type: number
              description: 완수한 프로젝트 수
            email:
              type: string
              description: 이메일
            updatedAt:
              type: string
              description: 최근 피플 정보 수정 일시
        status:
          type: number
          description: 응답 상태
    CommissionProjectResponse:
      title: CommissionProjectResponse
      type: object
      properties:
        data:
          type: object
          properties:
            projectId:
              type: number
              description: 프로젝트 ID
        status:
          type: number
          description: 응답 상태
    PagedCardProjectResponse:
      title: PagedCardProjectResponse
      type: object
      properties:
        data:
          type: object
          properties:
            pageInfo:
              type: object
              properties:
                number:
                  type: number
                  description: 현재 페이지 번호
                last:
                  type: boolean
                  description: 마지막 페이지 여부
                numberOfElements:
                  type: number
                  description: 현재 페이지 요소 수
                size:
                  type: number
                  description: 페이지 크기
                totalPages:
                  type: number
                  description: 전체 페이지 수
                sort:
                  type: object
                  properties:
                    property:
                      type: string
                      description: 정렬 속성
                    direction:
                      type: string
                      description: 정렬 방향
                      enum:
                      - ASC
                      - DESC
                first:
                  type: boolean
                  description: 첫 페이지 여부
                empty:
                  type: boolean
                  description: 비어있는 페이지 여부
                totalElements:
                  type: number
                  description: 전체 요소 수
            content:
              type: array
              items:
                type: object
                properties:
                  estimatedDays:
                    type: number
                    description: 예상 작업 일수
                  hashtags:
                    type: array
                    description: 해시태그
                    items:
                      oneOf:
                      - type: object
                      - type: boolean
                      - type: string
                      - type: number
                  applicationDuration:
                    type: object
                    properties:
                      endDate:
                        type: string
                        description: 지원자 모집 종료 기간
                      startDate:
                        type: string
                        description: 지원자 모집 시작 기간
                  recruitmentCount:
                    type: number
                    description: 모집 인원
                  applicantsCount:
                    type: number
                    description: 지원자 수
                  description:
                    type: string
                    description: 상세 설명
                  payment:
                    type: number
                    description: 성공 보수
                  title:
                    type: string
                    description: 제목
                  projectId:
                    type: number
                    description: 프로젝트 ID
                  status:
                    type: string
                    description: 프로젝트 상태
                    enum:
                    - PREPARING
                    - APPLICATION_OPENED
                    - APPLICATION_CLOSED
                    - MEETING
                    - CONFIRMED
                    - PROGRESSING
                    - COMPLETED
                    - CANCELLED
        status:
          type: number
          description: 응답 상태
    UploadFileResponse:
      title: UploadFileResponse
      type: object
      properties:
        data:
          type: object
          properties:
            fileUri:
              type: string
              description: 업로드된 파일 URI
        status:
          type: number
          description: 응답 상태
    EmailVerificationCodeRequest:
      title: EmailVerificationCodeRequest
      type: object
      properties:
        email:
          type: string
          description: 이메일
    UploadProfileImageResponse:
      title: UploadProfileImageResponse
      type: object
      properties:
        data:
          type: object
          properties:
            profileImageUri:
              type: string
              description: 업로드된 프로필 사진의 URI
        status:
          type: number
          description: 응답 상태
    EditMyPeopleRequest:
      title: EditMyPeopleRequest
      type: object
      properties:
        phoneNumber:
          type: string
          description: 전화번호
        nickname:
          type: string
          description: 닉네임
        email:
          type: string
          description: 이메일(기본값은 회원 가입 시 기입한 이메일)
    EditMyPeopleProfileRequest:
      title: EditMyPeopleProfileRequest
      type: object
      properties:
        activityArea:
          type: string
          description: 활동 지역
        education:
          type: object
          properties:
            major:
              type: string
              description: 전공명
            school:
              type: string
              description: 학교명
          description: 학력
        hashtags:
          type: array
          description: 해시태그
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        techStacks:
          type: array
          description: 기술 스택
          items:
            oneOf:
            - type: object
            - type: boolean
            - type: string
            - type: number
        portfolios:
          type: array
          items:
            type: object
            properties:
              description:
                type: string
                description: 포트폴리오 설명
              url:
                type: string
                description: 포트폴리오 URL
        introduction:
          type: string
          description: 소개
  securitySchemes:
    JWT:
      type: http
      scheme: bearer
      bearerFormat: JWT
security:
- JWT: [
    ]
